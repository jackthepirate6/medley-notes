{"_id":"S1_Cp8I9f","title":"Important algorithms","body":{"entityMap":{},"blocks":[{"key":"ag6qs","text":"Important algorithms","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"frsh3","text":"    Binary Search\n    Quicksort\n    Merge Sort\n    Suffix Array\n    Knuth-Morris-Pratt Algorithm (KMP)\n    Rabin-Karp Algorithm\n    Tries\n    Depth First Traversal of a graph\n    Breadth First Traversal of a graph\n    Dijkstra's Algorithm\n    Binary Indexed Tree\n    Segment Tree (with lazy propagation)\n    Persistent Segment Tree\n    Z algorithm\n    Floyd Warshall Algorithm\n    Sparse Table(RMQ)\n    Heap / Priority Queue / Heapsort\n    Modular Multiplicative Inverse\n    nCr % M\n    Suffix Automaton\n    Lowest Common Ancestor\n    Counting Inversions\n    Euclid's Extended Algorithm\n    Suffix Tree\n    Dynamic Programming\n    Basic Data Structures\n    Logarithmic Exponentiation\n    Graphs\n    Minimum Spanning Tree\n    Efficient Prime Factorization\n    Combinatorics\n    Union Find/Disjoint Set\n    Knapsack problem\n    Aho-Corasick String Matching Algorithm\n    Strongly Connected Components\n    Bellman Ford algorithm\n    Heavy-light Decomposition\n    Convex Hull\n    Jarvis Algorithm Implementation\n    Line Intersection\n    Sieve of Erastothenes\n    Interval Tree\n    Counting Sort\n    Probabilities\n    Matrix Exponentiation\n    Network flow\n    Max Flow(Ford-Fulkerson)\n    K-d tree :\n    Deque\n    Binary Search Tree\n    Quick Select\n    Treap/Cartesian Tree\n    Game Theory\n    STL\n    Maximum Bipartite Matching\n    Manacher's Algorithm\n    Miller-Rabin Primality Test\n    Stable Marriage Problem\n    Hungarian Algorithm\n    Sweep line Algorithm\n    LCP\n    Gaussian Elimination\n    Pollard Rho Integer Factorization\n    Topological Sorting\n    Detecting Cycles in a Graph : Directed , Undirected\n    Geometry\n    Backtracking\n    Eulerian and Hamiltonian Paths\n    Graph Coloring\n    Meet in the Middle\n    Arbitrary Precision Integer(BigInt)\n    Radix Sort\n    Bucket Sort\n    Johnson's Algorithm\n    Maximal Matching in a General Graph\n    Recursion\n    Inclusion and Exclusion Principle\n    Coordinate Compression\n    Sqrt-Decomposition\n    Link-Cut Tree\n    Euler's Totient Function\n    Burnside Lemma\n    Edit/Levenshtein Distance\n    Branch and Bound\n    Math for Competitive Programming\n    Mo's Algorithm","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1ie64","text":"","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"59kd9","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]},"dateCreated":"2018-03-26T11:47:28.264Z","lastUpdated":"2018-03-26T11:47:50.996Z"}
