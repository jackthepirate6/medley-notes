{"_id":"rkIM4RIz4","title":"Heapsort","body":{"entityMap":{},"blocks":[{"key":"ag6qs","text":"Heapsort","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1ta6d","text":"1. We create an unheapified(unbalanced) Heap using the array elements","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cjhuh","text":"2. We heapify complete heap as max heap","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ftnuo","text":"3. Since we heapified it as max heap, top element is maximum in the heap.","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cvuv9","text":"4. we swap top element(first element in the array) with the last element of the array. ","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bp815","text":"5. we again heapify the heap with number of element one less than the previous one(n-1) because we already placed the maximum element at the last position of the array.","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2rm49","text":"6. we keep doing this till array is sorted","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5jof9","text":"","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"59kd9","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]},"dateCreated":"2019-01-12T02:42:22.126Z","lastUpdated":"2019-01-12T02:53:29.911Z"}
