{"_id":"ByZi-RMbM","title":"Difference between cerr and cout","body":{"entityMap":{},"blocks":[{"key":"ag6qs","text":"Difference between cerr and cout","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a5f4q","text":" std::cout writes to a different stream than std::cerr, and std::cerr doesn't have a buffer (which std::cout does). Generally a terminal will display both streams, though.","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cfquo","text":"std::cout writes to a different stream than std::cerr, and std::cerr doesn't have a buffer (which std::cout does)","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fs46k","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8qubi","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"30jlf","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7sn3k","text":"As a rule of thumb, use std::cout for processed data and data that we might want to forward to another application for more processing, and std::cerr for errors, notices, and data that shouldn't really be included in the other stream .","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]},"dateCreated":"2017-12-04T13:46:00.932Z","lastUpdated":"2017-12-04T13:48:28.398Z"}
