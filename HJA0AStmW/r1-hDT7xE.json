{"_id":"r1-hDT7xE","title":"'Hashable' in python","body":{"entityMap":{},"blocks":[{"key":"ag6qs","text":"'Hashable' in python","type":"header-one","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bi317","text":"NOTE --- Set is unhashable\n\n    An object is hashable if it has a hash value which never changes during its lifetime (it needs a __hash__() method), and can be compared to other objects (it needs an __eq__() or __cmp__() method). Hashable objects which compare equal must have the same hash value.\n\n    Hashability makes an object usable as a dictionary key and a set member, because these data structures use the hash value internally.\n\n    All of Pythonâ€™s immutable built-in objects are hashable, while no mutable containers (such as lists or dictionaries) are. Objects which are instances of user-defined classes are hashable by default; they all compare unequal, and their hash value is their id().\n","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"59kd9","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]},"dateCreated":"2018-12-16T12:40:09.249Z","lastUpdated":"2018-12-16T13:18:16.878Z"}
