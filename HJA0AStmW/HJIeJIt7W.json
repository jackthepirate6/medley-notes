{"_id":"HJIeJIt7W","title":"What does __ in python mean","body":{"blocks":[{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"ag6qs","text":"What does __ in python mean","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"2m0n8","text":"","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"ch2d6","text":"  \n\n_single_leading_underscore: weak \"internal use\" indicator. E.g. \"from M import *\" does not import objects whose name starts with an underscore.","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"dn270","text":"single_trailing_underscore_: used by convention to avoid conflicts with Python keyword, e.g.Tkinter.Toplevel(master, class_='ClassName')","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"9hf3m","text":"__double_leading_underscore: when naming a class attribute, invokes name mangling (inside class FooBar, __boo becomes _FooBar__boo; see below). ","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"2pa1j","text":"__double_leading_and_trailing_underscore__: \"magic\" objects or attributes that live in user-controlled namespaces. E.g. __init__, __import__ or __file__. Never invent such names; only use them as documented.","type":"header-two"},{"data":{},"depth":0,"entityRanges":[],"inlineStyleRanges":[],"key":"36ccp","text":"Note that names with double leading and trailing underscores are essentially reserved for Python itself: \"Never invent such names; only use them as documented\".","type":"header-two"}],"entityMap":{}},"dateCreated":"2017-06-22T14:06:37.563Z","lastUpdated":"2017-08-12T04:57:59.619Z"}
